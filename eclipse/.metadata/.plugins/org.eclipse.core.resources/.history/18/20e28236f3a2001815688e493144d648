package ru.mwb.testmod.blocks;

import net.minecraft.block.Block;
import net.minecraft.block.BlockPortal;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.world.World;

public class testPortal extends BlockPortal 
{
	
	public testPortal()
	{
		super();
	}
	
	/*public void updateTick(World world, int x, int y, int z, Random rand)
	{
		
		
		
	}*/
	
	public AxisAlignedBB getCollisionBoundingBoxFromPool(World world, int x, int y, int z)
	{
		
		return null;
		
	}
	
	public boolean renderAsNormalBlock()
	{
		
		return false;
		
	}
	
	public void onNeighborBlockChange(World world, int x, int y, int z, Block block)
	{
		
		byte b0 = 0;
		byte b1 = 1;
		
		if(world.getBlock(x - 1, y, z) == TestBlock.testOre || world.getBlock(x + 1, y, z) == TestBlock.testOre)
		{
			
			b0 = 0;
			b1 = 1;
			
		}
		
		int i1;
		
		for(i1 = y; world.getBlock(x, i1, z) == this; --i1)
		{
			
			;
			
		}
		
		if(world.getBlock(x, i1 - 1, z) != TestBlock.testOre)
		{
			
			world.setBlockToAir(x, y, z);
			
		}
		
		else
		{
			
			int j1;
			
			for(j1 = 1; j1 < 4 && world.getBlock(x, i1 + j1, z) == this; ++j1)
			{
				
				;
				
			}
			
			if(j1 == 3 && world.getBlock(x, i1 + j1, z) == TestBlock.testOre)
			{
				
				boolean flag = world.getBlock(x - 1, y, z) == this || world.getBlock(x + 1, y, z) == this;
				boolean flag1 = world.getBlock(x, y, z - 1) == this || world.getBlock(x, y, z - 1) == this;
				
				if(flag && flag1)
				{
					
					world.setBlockToAir(x, y, z);
					
				}
				
				else
				{
					
					if((world.getBlock(x+b0, y, z+b1) != TestBlock.testOre))
					
				}
				
			}
			
		}
		
	}
	
}
